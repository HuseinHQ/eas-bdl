<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <style>
      .custom-container {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        width: 100%;
      }
      .card-header {
        background-color: #007bff;
        color: white;
      }
      .card-body {
        background-color: #f8f9fa;
      }
      .chart-container {
        width: 100%;
        height: 400px;
      }
    </style>
  </head>
  <body class="d-flex flex-row">
    <!-- Sidebar -->
    <%- include('_sidebar', { active: 'dashboard' }) %>
    <!-- Navbar -->
    <div class="flex-grow-1">
      <%- include('_navbar', {title: 'Data Pemasukan'}) %>
      <div class="container mt-5">
        <div class="row">
          <div class="col-md-6 mb-4">
            <div class="card">
              <div class="card-header">Hari Ini</div>
              <div class="card-body">
                <div class="chart-container">
                  <canvas id="dailyChart"></canvas>
                </div>
              </div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <div class="card">
              <div class="card-header">1 Minggu Terakhir</div>
              <div class="card-body">
                <div class="chart-container">
                  <canvas id="weeklyChart"></canvas>
                </div>
              </div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <div class="card">
              <div class="card-header">1 Bulan Terakhir</div>
              <div class="card-body">
                <div class="chart-container">
                  <canvas id="monthlyChart"></canvas>
                </div>
              </div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <div class="card">
              <div class="card-header">1 Tahun Terakhir</div>
              <div class="card-body">
                <div class="chart-container">
                  <canvas id="annualyChart"></canvas>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="row my-5">
          <div class="col-12">
            <div class="card">
              <div class="card-header">Barang Terlaris</div>
              <div class="card-body">
                <table class="table table-striped">
                  <thead>
                    <tr>
                      <th>ID</th>
                      <th>Nama Barang</th>
                      <th>Harga</th>
                      <th>Total Penjualan</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% mostSold.forEach(item => { %>
                    <tr>
                      <td><%= item.id %></td>
                      <td><%= item.nama %></td>
                      <td><%= item.harga.toLocaleString('id-ID', { style: 'currency', currency: 'IDR' }) %></td>
                      <td><%= item.total_penjualan %></td>
                    </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <input value="<%= JSON.stringify(chartData) %>" type="hidden" id="chartData" />

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/public/formatChartData.js"></script>
    <script>
      const ctx = document.getElementById('dailyChart');
      const ctx2 = document.getElementById('weeklyChart');
      const ctx3 = document.getElementById('monthlyChart');
      const ctx4 = document.getElementById('annualyChart');
      const chartData = JSON.parse(document.getElementById('chartData').value);
      const dailyData = formatDailyData(chartData.daily);
      const weeklyData = formatWeeklyData(chartData.weekly);
      const monthlyData = formatMonthlyData(chartData.monthly);
      const annualyData = formatAnnualyData(chartData.annually);

      // daily chart
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: dailyData.map((item) => item.label),
          datasets: [
            {
              label: 'Pemasukan',
              data: dailyData.map((item) => item.data),
              borderWidth: 1,
              borderColor: '#007bff',
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });

      // weekly chart
      new Chart(ctx2, {
        type: 'line',
        data: {
          labels: weeklyData.map((item) => item.label),
          datasets: [
            {
              label: 'Pemasukan',
              data: weeklyData.map((item) => item.data),
              borderWidth: 1,
              borderColor: '#28a745',
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });

      // monthly chart
      new Chart(ctx3, {
        type: 'line',
        data: {
          labels: monthlyData.map((item) => item.label),
          datasets: [
            {
              label: 'Pemasukan',
              data: monthlyData.map((item) => item.data),
              borderWidth: 1,
              borderColor: '#ffc107',
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });

      // annualy chart
      new Chart(ctx4, {
        type: 'line',
        data: {
          labels: annualyData.map((item) => item.label),
          datasets: [
            {
              label: 'Pemasukan',
              data: annualyData.map((item) => item.data),
              borderWidth: 1,
              borderColor: '#dc3545',
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });
    </script>
  </body>
</html>
